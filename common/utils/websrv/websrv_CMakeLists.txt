if ( "${OPENAIR_CMAKE}" STREQUAL "")
  message( FATAL_ERROR "oai Environment variables not set")
endif ( "${OPENAIR_CMAKE}" STREQUAL "")
# websrv dependencies
unset(ULFIUS)
unset(ULFIUS CACHE)
find_library(ULFIUS NAMES "libulfius.so"  NO_CACHE)
if (NOT ULFIUS)
  message(FATAL_ERROR "ulfius library (https://github.com/babelouest/ulfius) not found, install libulfius-dev (ubuntu) if you need to build websrv back-end")
endif()

unset(JSON)
unset(JSON CACHE)
find_library(JSON NAMES "libjansson.so"  NO_CACHE )
if (NOT JSON)
  message(FATAL_ERROR "libjansson not found, install libjansson-dev for ubuntu, jansson-devel for fedora if you need to build websrv back-end")
endif()

unset(NPM)
unset(NPM CACHE)
find_program(NPM NAMES npm NO_CACHE)
if (NOT NPM)
  message(FATAL_ERROR " npm is not installed, frontend won't be built. Possibly install npm, package is available for ubuntu and fedora")
endif()

# build the backend ( the embedded web server)

message(STATUS "Configuring webserver backend")
add_library(websrv MODULE
            common/utils/websrv/websrv.c
            common/utils/websrv/websrv_websockets.c
            common/utils/websrv/websrv_scope.c
            common/utils/websrv/websrv_noforms.c
            common/utils/websrv/websrv_scope.c
            common/utils/websrv/websrv_utils.c
            openair1/PHY/TOOLS/nr_phy_scope.c
)
target_link_libraries(websrv PRIVATE asn1_lte_rrc asn1_nr_rrc)
target_link_libraries(websrv PRIVATE ulfius jansson)
target_compile_definitions(websrv PUBLIC WEBSRVSCOPE)

# build the frontend ( loaded from web server by browsers)

add_custom_target (
  websrvfront_installjsdep
  WORKING_DIRECTORY ${WEBSRVROOT}/frontend
  COMMAND npm install
  DEPENDS ${WEBSRVROOT}/frontend/package-lock.json
)

message(STATUS "Configuring webserver backend")
add_custom_target (
  websrvfront
  WORKING_DIRECTORY ${WEBSRVROOT}/frontend
  COMMAND npm run build
  #COMMAND npm run builddev
  DEPENDS websrvfront_installjsdep
)


#install built files, required at exec time
install(TARGETS websrv DESTINATION bin)

if (EXISTS "${OPENAIR_CMAKE}/ran_build/build" AND IS_DIRECTORY "${OPENAIR_CMAKE}/ran_build/build")
   add_custom_command(TARGET websrvfront
                 POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${WEBSRVROOT}/frontend/dist/softmodem-ngx ${OPENAIR_CMAKE}/ran_build/build/websrv
                            COMMAND ${CMAKE_COMMAND} -E copy_directory ${WEBSRVROOT}/frontend/dist/softmodem-ngx ${OPENAIR_TARGETS}/bin/websrv
                            COMMAND ${CMAKE_COMMAND} -E copy_directory ${WEBSRVROOT}/helpfiles ${OPENAIR_CMAKE}/ran_build/build/websrv/helpfiles
                            COMMAND ${CMAKE_COMMAND} -E copy_directory ${WEBSRVROOT}/helpfiles ${OPENAIR_TARGETS}/bin/websrv/helpfiles
                 COMMENT "Moving frontend files to:\n    ${OPENAIR_CMAKE}/ran_build/build/websrv\n    ${OPENAIR_TARGETS}/bin/websrv" )
endif ()
